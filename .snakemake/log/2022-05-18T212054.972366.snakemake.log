Building DAG of jobs...
Using shell: /bin/bash
Provided cores: 12
Rules claiming more threads will be scaled down.
Conda environments: ignored
Job stats:
job                    count    min threads    max threads
-------------------  -------  -------------  -------------
calculate_frequency        1              1              1
call_methylation           1              1              1
minimap2                   1              6              6
samtools_index             1              1              1
samtools_sort              1              1              1
split_cpgs                 1              1              1
total                      6              1              6

Select jobs to execute...

[Wed May 18 21:20:55 2022]
rule minimap2:
    input: data/ecoli_k12_mg1655.fasta, example.fastq
    output: nanopolish_results/mapped/example.bam
    log: nanopolish_results/mapped/example.log
    jobid: 4
    wildcards: sample=example
    threads: 6
    resources: tmpdir=/tmp

[Wed May 18 21:20:56 2022]
Finished job 4.
1 of 6 steps (17%) done
Select jobs to execute...

[Wed May 18 21:20:56 2022]
rule samtools_sort:
    input: nanopolish_results/mapped/example.bam
    output: nanopolish_results/mapped/example.sorted.bam
    jobid: 3
    wildcards: sample=example
    resources: tmpdir=/tmp

[Wed May 18 21:20:56 2022]
Finished job 3.
2 of 6 steps (33%) done
Select jobs to execute...

[Wed May 18 21:20:56 2022]
rule samtools_index:
    input: nanopolish_results/mapped/example.sorted.bam
    output: nanopolish_results/mapped/example.sorted.bam.bai
    jobid: 5
    wildcards: sample=example
    resources: tmpdir=/tmp

[Wed May 18 21:20:56 2022]
Finished job 5.
3 of 6 steps (50%) done
Select jobs to execute...

[Wed May 18 21:20:56 2022]
rule call_methylation:
    input: nanopolish_results/mapped/example.sorted.bam, nanopolish_results/mapped/example.sorted.bam.bai, data/ecoli_k12_mg1655.fasta, example.fastq, example.fastq.index, example.fastq.index.fai, example.fastq.index.gzi, example.fastq.index.readdb
    output: nanopolish_results/example_nanopolish-log.tsv
    jobid: 2
    wildcards: sample=example
    resources: tmpdir=/tmp

[Wed May 18 21:20:58 2022]
Finished job 2.
4 of 6 steps (67%) done
Select jobs to execute...

[Wed May 18 21:20:58 2022]
rule split_cpgs:
    input: nanopolish_results/example_nanopolish-log.tsv
    output: nanopolish_results/example_nanopolish-log-perCG.tsv
    jobid: 1
    wildcards: sample=example
    resources: tmpdir=/tmp

[Wed May 18 21:20:58 2022]
Finished job 1.
5 of 6 steps (83%) done
Select jobs to execute...

[Wed May 18 21:20:58 2022]
rule calculate_frequency:
    input: script_in_snakemake/run_nanopolish.R, nanopolish_results/example_nanopolish-log-perCG.tsv
    output: nanopolish_results/example_nanopolish-freq-perCG.tsv, nanopolish_results/example_nanopolish-freq-perCG-combStrand.tsv
    jobid: 0
    wildcards: sample=example
    resources: tmpdir=/tmp

[Wed May 18 21:20:59 2022]
Finished job 0.
6 of 6 steps (100%) done
Complete log: .snakemake/log/2022-05-18T212054.972366.snakemake.log
