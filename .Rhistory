library(data.table)
library(dplyr)
library(plyr)
df <- read.table("nanopolish_results/example_nanopolish-log-perCG.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
str(df)
View(df)
# Fix positions on the -'ve strand
df[df$Strand == "-","Pos"] <- df[df$Strand == "-","Pos"]+1
df <- filter(df, Log.like.ratio >= 2.0 | Log.like.ratio <= -2.0)
df_m <- plyr::count(df[df$Log.like.ratio > 0, ], c("Chr", "Pos"))
df_unm <- plyr::count(df[df$Log.like.ratio < 0, ], c("Chr", "Pos"))
View(df_m)
df_m <- plyr::count(df[df$Log.like.ratio > 0, ], c("Chr", "Pos","Strand"))
df_unm <- plyr::count(df[df$Log.like.ratio < 0, ], c("Chr", "Pos","Strand"))
View(df_m)
colnames(df_m)[4] <- "Num.methylated"
colnames(df_unm)[4] <- "Num.unmethylated"
# New df
df_1 <- full_join(df_m, df_unm, by = c("Chr", "Pos", "Strand"))
sum(is.na(df_1))
View(df_1)
df_1[is.na(df_1)] <- 0
# Create a new column that gives a total no. of reads (coverage)
df_1$df.cov <- df_1$Num.methylated + df_1$Num.unmethylated
df_1$df.cov <- df_1$Num.methylated + df_1$Num.unmethylated
# Get the methylation frequency by (no. of methylated reads / total no. of reads)
df$df.freq <- df$Num.methylated/df$df.cov
# Get the methylation frequency by (no. of methylated reads / total no. of reads)
df_1$df.freq <- df_1$Num.methylated/df_1$df.cov
str(df_1)
# Remove unnessary columns
df_1 <- select(df_1, Chr, Pos, df.cov, df.freq, Strand)
df_1$Pos_start <- df_1$Pos-1
df_1 <- select(df_1, Chr, Pos_start, Pos, Cov, Freq, Strand)
df_1 <- select(df_1, Chr, Pos_start, Pos, df.cov, df.freq, Strand)
str(df_1)
colnames(df_1) <- c("Chr", "Pos_start", "Pos_end", "Coverage", "Methylation", "Strand")
df_1$Pos_start <- format(df_1$Pos_start, scientific=FALSE)
df_1$Pos_end <- format(df_1$Pos_end, scientific = FALSE)
str(df)
str(df_1)
str(df)
df_2 <- df
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos"] <- df_2[df_2$Strand == "-","Pos"]-1
View(df_2)
df_m <- plyr::count(df_2[df_2$Log.like.ratio > 0, ], c("Chr", "Pos","Strand"))
df_unm <- plyr::count(df_2[df_2$Log.like.ratio < 0, ], c("Chr", "Pos","Strand"))
colnames(df_m)[4] <- "Num.methylated"
colnames(df_unm)[4] <- "Num.unmethylated"
df_2 <- full_join(df_m, df_unm, by = c("Chr", "Pos", "Strand"))
# Replace NA with 0
df_2[is.na(df_2)] <- 0
# Create a new column that gives a total no. of reads (coverage)
df_2$Coverage <- df_2$Num.methylated + df_2$Num.unmethylated
# Get the methylation frequency by (no. of methylated reads / total no. of reads)
df_2$Methylation <- df_2$Num.methylated/df_2$Coverage
str(df_2)
10\13
10/13
View(df_1)
str(df_2)
# Remove unnessary columns
df_2 <- select(df_2, -Num.methylated, -Num.unmethylated)
str(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos)]
df_2 <- data.frame(df_2)
str(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos)]
df_2 <- data.table(df_2)
#str(df)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos)]
df_2 <- data.frame(df_2)
str(df_2)
df_2$Pos_start <- df_2$Pos-1
str(df_2)
df_2 <- select(df_2, Chr, Pos_start, Pos, Coverage, Methylation)
str(df_2)
colnames(df_2) <- c("Chr", "Pos_start", "Pos_end", "Coverage", "Methylation")
str(df_2)
df_2$Pos_start <- format(df_2$Pos_start, scientific = FALSE)
df_2$Pos_end <- format(df_2$Pos_end, scientific = FALSE)
load("~/Analysis/cas9paper/supsample_reads_into_diff_cov.R")
load("~/Analysis/cas9paper/")
load("~/Analysis/cas9paper")
setwd("~/Analysis/cas9paper")
ntarget_site <- read.table("ontarget_cov100.txt", sep = "\t", header = FALSE)
colnames(ontarget_site) <- c("Chr", "Pos", "Cov")
head(ontarget_site)
################################################################################### Nanopolish
np <- read.table("nanopolish_results/TG_01_GM12878_brPanel_MinION_multiFast5_nanopolish-perRead-score.tsv", sep = "\t", header = TRUE)
np[np$Strand == "-", "Pos"] <- np[np$Strand == "-", "Pos"]-1
colnames(np)[1] <- "Read_ID"
np <- np %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
str(np)
################################################################################### DeepSignal
ds <- read.table("deepsignal_results/TG_01_deepsignal-prob.tsv", header = FALSE,  sep = "\t")
ds <- ds %>% select(2,3,5,7,8) # pos, strand, id, unmethylated, methylated
str(ds)
colnames(ds) <- c("Pos", "Strand", "Read_ID", "ds_can_prob", "ds_mod_prob")
ds[,"Pos"] <- ds[,"Pos"]+1
ds <- ds %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
ontarget_site <- read.table("ontarget_cov100.txt", sep = "\t", header = FALSE)
colnames(ontarget_site) <- c("Chr", "Pos", "Cov")
head(ontarget_site)
################################################################################### Nanopolish
np <- read.table("nanopolish_results/TG_01_GM12878_brPanel_MinION_multiFast5_nanopolish-perRead-score.tsv", sep = "\t", header = TRUE)
np[np$Strand == "-", "Pos"] <- np[np$Strand == "-", "Pos"]-1
colnames(np)[1] <- "Read_ID"
np <- np %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
str(np)
################################################################################### DeepSignal
ds <- read.table("deepsignal_results/TG_01_deepsignal-prob.tsv", header = FALSE,  sep = "\t")
ds <- ds %>% select(2,3,5,7,8) # pos, strand, id, unmethylated, methylated
str(ds)
colnames(ds) <- c("Pos", "Strand", "Read_ID", "ds_can_prob", "ds_mod_prob")
ds[,"Pos"] <- ds[,"Pos"]+1
ds <- ds %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
rm(ntarget_site)
mgld <- read.table("megalodon_results/per_read_modified_base_calls.txt", header = TRUE, sep = "\t")
mgld <- mgld %>% select(1,4,3,5,6) # id, pos, strand, mod_log_prob, can_log_prob
str(mgld)
colnames(mgld) <- c("Read_ID", "Pos", "Strand", "mod_log_prob", "can_log_prob")
mgld <- mgld %>% mutate(Strand = if_else(Strand == 1, "+", "-"))
mgld[,"Pos"] <- mgld[,"Pos"]+1
################################################################################ Tombo
tb <- read.table("tombo_results/TG_01_GM12878_tombo-perRead-score-final.tsv", sep = "\t", header = TRUE)
colnames(tb)[4] <- "tb_score"
colnames(tb)[1] <- "Read_ID"
tb[tb$Strand == "-", "Pos"] <- tb[tb$Strand == "-", "Pos"]-1
tb <- tb %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
str(tb)
################################################################################ Guppy
gp <- read.table("guppy_results/TG_01_guppy-perRead-score.tsv", sep = "\t", header = TRUE)
colnames(gp)[4] <- "gp_score"
colnames(gp)[1] <- "Read_ID"
gp[gp$Strand == "-", "Pos"] <- gp[gp$Strand == "-", "Pos"]-1
gp <- gp %>% mutate(Read_ID = (gsub("b", "", Read_ID)))
str(gp)
str(np)
str(ds)
str(mgld)
str(gp)
str(tb)
comb <- list(np, ds, mgld, tb, gp) %>% reduce(inner_join, by = c("Pos", "Read_ID", "Strand"))
comb_stats <- data.frame(table(comb$Pos))
sum(comb_stats$Freq >= 50)
str(comb_stats)
colnames(comb_stats) <- c("Pos", "Freq")
comb_stats$Pos <- as.integer(levels(comb_stats$Pos))[comb_stats$Pos]
comb_stats100 <- filter(comb_stats, Freq >= 50)
comb100 <- left_join(comb_stats100, comb, by = "Pos")
# Subsample 5
comb_sub5 <- comb100 %>%
group_by(Pos) %>%
sample_n(5, replace = TRUE)
# Subsample 10
comb_sub10 <- comb100 %>%
group_by(Pos) %>%
sample_n(10, replace = TRUE)
# Subsample 20
comb_sub20 <- comb100 %>%
group_by(Pos) %>%
sample_n(20, replace = TRUE)
# Subsample 50
comb_sub50 <- comb100 %>%
group_by(Pos) %>%
sample_n(50, replace = TRUE)
# Subsample 100
comb_sub100 <- comb100 %>%
group_by(Pos) %>%
sample_n(100, replace = TRUE)
################################################## wgbs ##############################
wgbs <- read.table("/home/admin/Data/WGBS/na12878/rep1/na12878_rep1_wgbs.tsv", header = FALSE, sep = "")
colnames(wgbs) <- c("Chr", "Pos", "Strand","BS.cov", "BS.freq")
head(wgbs)
tail(wgbs)
# Accumulate on the +'ve strand
wgbs[wgbs$Strand == "-","Pos"] <- wgbs[wgbs$Strand == "-","Pos"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
wgbs <- data.table(wgbs)
str(wgbs)
wgbs <- wgbs[,list(BS.freq=mean(BS.freq),  BS.cov=sum(BS.cov)), list(Chr,Pos)]
wgbs <- data.frame(wgbs)
str(wgbs)
wgbs <- filter(wgbs, Chr == "chr3" | Chr == "chr7" | Chr == "chr9" | Chr == "chr11" |
Chr == "chr12" | Chr == "chr16" | Chr == "chr17")
wgbs$BS.freq <- wgbs$BS.freq/100
comb_sub5 <- data.frame(comb_sub5)
comb_sub10 <- data.frame(comb_sub10)
comb_su20 <- data.frame(comb_sub20)
comb_sub50 <- data.frame(comb_sub50)
comb_sub100 <- data.frame(comb_sub100)
str(comb_sub5)
library(plyr)
np_m <- plyr::count(comb_sub5[comb_sub5$Score >= 0, ], c("Pos","Strand"))
np_unm <- plyr::count(comb_sub5[comb_sub5$Score < 0, ], c("Pos","Strand"))
colnames(np_m)[3] <- "Num.methylated"
colnames(np_unm)[3] <- "Num.unmethylated"
np_site <- full_join(np_m, np_unm, by = c("Pos", "Strand"))
np_site[is.na(np_site)] <- 0
np_site$NP.cov <- np_site$Num.methylated + np_site$Num.unmethylated # total number of reads (coverage)
np_site$NP.freq <- np_site$Num.methylated/np_site$NP.cov
np_site <- select(np_site, Pos, Strand, NP.cov, NP.freq) # Remove unnessary columns
head(np_site)
ds_site <- comb_sub5 %>% mutate(DS.mod = if_else(ds_can_prob > ds_mod_prob, "c", "m"))
ds_m <- plyr::count(ds_site[ds_site$DS.mod == "m", ], c("Pos","Strand"))
ds_unm <- plyr::count(ds_site[ds_site$DS.mod == "c", ], c("Pos","Strand"))
colnames(ds_m)[3] <- "Num.methylated"
colnames(ds_unm)[3] <- "Num.unmethylated"
ds_site <- full_join(ds_m, ds_unm, by = c("Pos", "Strand"))
ds_site[is.na(ds_site)] <- 0
ds_site$ds.cov <- ds_site$Num.methylated + ds_site$Num.unmethylated # total number of reads (coverage)
ds_site$ds.freq <- ds_site$Num.methylated/ds_site$ds.cov
ds_site <- select(ds_site, Pos, Strand, ds.cov, ds.freq) # Remove unnessary columns
head(ds_site)
comb_sub5$mod_log_prob <- exp(comb_sub5$mod_log_prob)
comb_sub5$can_log_prob <- exp(comb_sub5$can_log_prob)
mgld_site <- comb_sub5 %>% mutate(DS.mod = if_else(can_log_prob > mod_log_prob, "c", "m"))
mgld_m <- plyr::count(mgld_site[mgld_site$DS.mod == "m", ], c("Pos","Strand"))
mgld_unm <- plyr::count(mgld_site[mgld_site$DS.mod == "c", ], c("Pos","Strand"))
colnames(mgld_m)[3] <- "Num.methylated"
colnames(mgld_unm)[3] <- "Num.unmethylated"
mgld_site <- full_join(mgld_m, mgld_unm, by = c("Pos", "Strand"))
mgld_site[is.na(mgld_site)] <- 0
mgld_site$mgld.cov <- mgld_site$Num.methylated + mgld_site$Num.unmethylated # total number of reads (coverage)
mgld_site$mgld.freq <- mgld_site$Num.methylated/mgld_site$mgld.cov
mgld_site <- select(mgld_site, Pos, Strand, mgld.cov, mgld.freq) # Remove unnessary columns
head(mgld_site)
str(comb_sub5)
tb_site <- comb_sub5 %>% mutate(tb.mod = if_else(tb_score >= 0, "c", "m"))
tb_m <- plyr::count(tb_site[tb_site$tb.mod == "m", ], c("Pos","Strand"))
tb_unm <- plyr::count(tb_site[tb_site$tb.mod == "c", ], c("Pos","Strand"))
colnames(tb_m)[3] <- "Num.methylated"
colnames(tb_unm)[3] <- "Num.unmethylated"
tb_site <- full_join(tb_m, tb_unm, by = c("Pos", "Strand"))
tb_site[is.na(tb_site)] <- 0
tb_site$tb.cov <- tb_site$Num.methylated + tb_site$Num.unmethylated # total number of reatb (coverage)
tb_site$tb.freq <- tb_site$Num.methylated/tb_site$tb.cov
tb_site <- select(tb_site, Pos, Strand, tb.cov, tb.freq) # Remove unnessary columns
head(tb_site)
gp_site <- comb_sub5 %>% mutate(gp.mod = if_else(gp_score >= 0, "m", "c"))
gp_m <- plyr::count(gp_site[gp_site$gp.mod == "m", ], c("Pos","Strand"))
gp_unm <- plyr::count(gp_site[gp_site$gp.mod == "c", ], c("Pos","Strand"))
colnames(gp_m)[3] <- "Num.methylated"
colnames(gp_unm)[3] <- "Num.unmethylated"
gp_site <- full_join(gp_m, gp_unm, by = c("Pos", "Strand"))
gp_site[is.na(gp_site)] <- 0
gp_site$gp.cov <- gp_site$Num.methylated + gp_site$Num.unmethylated # total number of reagp (coverage)
gp_site$gp.freq <- gp_site$Num.methylated/gp_site$gp.cov
gp_site <- select(gp_site, Pos, Strand, gp.cov, gp.freq) # Remove unnessary columns
head(gp_site)
subset_by_5 <- list(np_site, ds_site, mgld_site, tb_site, gp_site) %>% reduce(inner_join, by = c("Pos", "Strand"))
str(subset_by_5)
str(wgbs)
subset_by_5 <-left_join(subset_by_5, wgbs, by = "Pos")
str(subset_by_5)
head(subset_by_5)
ggqqplot(subset_by_5$BS.freq)
ggqqplot(subset_by_5$ds.freq)
cor.test(subset_by_5$BS.freq, subset_by_5$ds.freq)
sprintf(cor(subset_by_5$BS.freq, subset_by_5$ds.freq, use="complete.obs"), fmt = "%.4f")
sprintf(cor(subset_by_5$BS.freq, subset_by_5$NP.freq, use="complete.obs"), fmt = "%.4f")
sprintf(cor(subset_by_5$BS.freq, subset_by_5$mgld.freq, use="complete.obs"), fmt = "%.4f")
sprintf(cor(subset_by_5$BS.freq, subset_by_5$tb.freq, use="complete.obs"), fmt = "%.4f")
sprintf(cor(subset_by_5$BS.freq, subset_by_5$gp.freq, use="complete.obs"), fmt = "%.4f")
View(comb_sub5)
7435/5
View(comb_stats100)
1487*50
View(comb_su20)
setwd("~/comprna/METEORE")
library(dplyr)
library(data.table)
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos", "Strand", "Methyl_freq", "Cov")
df[,"Pos"] <- df[,"Pos"]+1
str(df)
df_1 <- df
str(df_1)
df_1$Pos_start <- df_1$Pos-1
str(df_1)
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos", "Strand", "Methylation", "Coverage")
df[,"Pos"] <- df[,"Pos"]+1
######################### Retain methylation on boht strands for a CpG site ###########################
df_1 <- df
str(df_1)
df_1$Pos_start <- df_1$Pos-1
str(df_1)
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos_end", "Strand", "Methylation", "Coverage")
df[,"Pos"] <- df[,"Pos"]+1
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos_end", "Strand", "Methylation", "Coverage")
df[,"Pos_end"] <- df[,"Pos_end"]+1
df_1 <- df
df_1$Pos_start <- df_1$Pos-1
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos_end", "Strand", "Methylation", "Coverage")
df[,"Pos_end"] <- df[,"Pos_end"]+1
######################### Retain methylation on boht strands for a CpG site ###########################
df_1 <- df
df_1$Pos_start <- df_1$Pos_end-1
str(df_1)
df_1 <- select(df_1, Chr, Pos_start, Pos_end, Coverage, Methylation, Strand)
str(df_1)
df_1$Pos_start <- format(df_1$Pos_start, scientific = FALSE)
df_1$Pos_end <- format(df_1$Pos_end, scientific = FALSE)
str(df_2)
########################## Combine methylation from both strands for a CpG site ########################
df_2 <- df
str(df_2)
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos"] <- df_2[df_2$Strand == "-","Pos"]-1
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
str(df_2)
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methyation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
df <- read.table("deepsignal_results/example_deepsignal-freq-perCG-raw.tsv", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df  %>% select(1, 2, 3, 10, 9)
colnames(df) <- c("Chr", "Pos_end", "Strand", "Methylation", "Coverage")
df[,"Pos_end"] <- df[,"Pos_end"]+1
######################### Retain methylation on boht strands for a CpG site ###########################
df_1 <- df
df_1$Pos_start <- df_1$Pos_end-1
df_1 <- select(df_1, Chr, Pos_start, Pos_end, Coverage, Methylation, Strand)
str(df_1)
df_1$Pos_start <- format(df_1$Pos_start, scientific = FALSE)
df_1$Pos_end <- format(df_1$Pos_end, scientific = FALSE)
write.table(df_1, file=args[2],  quote = FALSE, sep = "\t", col.names = TRUE, row.names = FALSE)
########################## Combine methylation from both strands for a CpG site ########################
df_2 <- df
str(df_2)
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
df_2$Pos_start <- format(df_2$Pos_start, scientific = FALSE)
df_2$Pos_end <- format(df_2$Pos_end, scientific = FALSE)
df_2 <- df
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
df_2$Pos_start <- df_1$Pos_end-1
df_2 <- select(df_2, Chr, Pos_start, Pos_end,  Coverage, Methylation)
df_2 <- df
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
str(df_2)
df_2$Pos_start <- df_2$Pos_end-1
df_2 <- select(df_2, Chr, Pos_start, Pos_end,  Coverage, Methylation)
str(df_2)
tb.freq <- read.table("tombo_results/example_tombo-freq-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
tb.cov <- read.table("tombo_results/example_tombo-cov-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
colnames(tb.freq) <- c("Chr", "Pos_end", "Methylation", "Strand")
colnames(tb.cov) <- c("Chr", "Pos_end", "Methylation", "Strand")
tb <- inner_join(tb.cov, tb.freq, by = c("Chr", "Pos", "Strand"))
tb.freq <- read.table("tombo_results/example_tombo-freq-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
tb.cov <- read.table("tombo_results/example_tombo-cov-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
colnames(tb.freq) <- c("Chr", "Pos_end", "Methylation", "Strand")
colnames(tb.cov) <- c("Chr", "Pos_end", "Methylation", "Strand")
tb <- inner_join(tb.cov, tb.freq, by = c("Chr", "Pos_end", "Strand"))
str(tb)
tb.freq <- read.table("tombo_results/example_tombo-freq-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
tb.cov <- read.table("tombo_results/example_tombo-cov-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
colnames(tb.freq) <- c("Chr", "Pos_end", "Methylation", "Strand")
colnames(tb.cov) <- c("Chr", "Pos_end", "Coverage", "Strand")
tb <- inner_join(tb.cov, tb.freq, by = c("Chr", "Pos_end", "Strand"))
str(tb)
View(tb)
tb.freq <- read.table("tombo_results/example_tombo-freq-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
tb.cov <- read.table("tombo_results/example_tombo-cov-only.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
colnames(tb.freq) <- c("Chr", "Pos_end", "Methylation", "Strand")
colnames(tb.cov) <- c("Chr", "Pos_end", "Coverage", "Strand")
df <- inner_join(tb.cov, tb.freq, by = c("Chr", "Pos_end", "Strand"))
str(df)
######################################### Retain methylation on both strands for a CpG site ####################################
df_1 <- df
str(df_1)
df_1$Pos_start <- df_1$Pos_end-1
str(df_1)
df_1 <- select(df_1, Chr, Pos_start, Pos_end, Coverage, Methylation Strand)
df_1 <- select(df_1, Chr, Pos_start, Pos_end, Coverage, Methylation, Strand)
str(df_1)
df_1$Pos_end <- format(df_1$Pos_end, scientific = FALSE)
df_1$Pos_start <- format(df_1$Pos_start, scientific = FALSE)
########################## Combine methylation from both strands for a CpG site ########################
df_2 <- df
st(df_2)
st4(df_2)
str(df_2)
# Accumulate CpG sites into +'ve strand
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
str(df_2)
df_2$Pos_start <- df_2$Pos_end-1
df_2 <- select(df_2, Chr, Pos_start, Pos_end,  Coverage, Methylation)
df_2$Pos_start <- format(df_2$Pos_start, scientific = FALSE)
str(df_2)
View(df_1)
View(df_2)
df_2$Pos_end <- format(df_2$Pos_end, scientific = FALSE)
getwd()
df <- read.table("/home/admin/comprna/METEORE/megalodon_results/modified_bases.5mC.bed", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- read.table("/home/admin/comprna/METEORE/megalodon_results/modified_bases.5mC.bed", header = FALSE, sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df %>% select(1, 3, 6, 11, 10)
str(df)
colnames(df) <- c("Chr", "Pos_end", "Strand", "Methylation", "Coverage")
str(df)
df_1 <- df
df_1$Pos_start <- df_1$Pos_end-1
df_1 <- select(df_1, Chr, Pos_start, Pos_end, Coverage, Methylation, Strand)
df_1$Pos_start <- format(df_1$Pos_start, scientific = FALSE)
df_1$Pos_end <- format(df_1$Pos_end, scientific = FALSE)
str(df_1)
library(dplyr)
library(data.table)
df_2 <- df
df_2[df_2$Strand == "-","Pos_end"] <- df_2[df_2$Strand == "-","Pos_end"]-1
# Use data.table to compute the mean of duplicated position while keeping non-duplicated sites
df_2 <- data.table(df_2)
df_2 <- df_2[,list(Methylation = mean(Methylation),
Coverage = sum(Coverage)),
list(Chr, Pos_end)]
df_2 <- data.frame(df_2)
df_2$Pos_start <- df_2$Pos_end-1
df_2 <- select(df_2, Chr, Pos_start, Pos_end,  Coverage, Methylation)
df_2$Pos_start <- format(df_2$Pos_start, scientific = FALSE)
df_2$Pos_end <- format(df_2$Pos_end, scientific = FALSE)
str(df_2)
(66.7+75)/2
df <- read.table("/home/admin/comprna/METEORE/megalodon_results/per_read_modified_base_calls.txt", header = TRUE, sep = "\t")
df <- read.table("/home/admin/comprna/METEORE/megalodon_results/per_read_modified_base_calls.txt", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
df <- df %>% select(1,2,4,3,5,6)
str(df)
df$Score <- df$mod_log_prob - df$can_log_prob
str(df)
df <- df %>% select(1,2,3,4,6)
str(df)
colnames(df) <- c("ID", "Chr", "Pos", "Strand", "Score")
df <- df %>% mutate(Strand = if_else(Strand == 1, "+", "-"))
df[,"Pos"] <- df[,"Pos"]+1
df$Pos <- format(df$Pos,scientific=FALSE)
str(df)
df <- read.table("/home/admin/comprna/METEORE/nanopolish_resultsexample_nanopolish-log-perCG.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
df <- read.table("/home/admin/comprna/METEORE/nanopolish_results/example_nanopolish-log-perCG.tsv", header = TRUE, sep = "\t", stringsAsFactors = TRUE)
str(df)
colnames(df) <- c("Chr", "Pos", "Strand", "Score", "ID")
df[df$Strand == "-","Pos"] <- df[df$Strand == "-","Pos"]+1
df <- df[, c("ID", "Chr", "Pos", "Strand", "Score")]
df$Pos <- format(df$Pos,scientific=FALSE)
str(df)
df <- read.table("/home/admin/comprna/METEORE/deepsignal_results/example_deepsignal-prob.tsv", header = FALSE,  sep = "\t", stringsAsFactors = TRUE)
str(df)
df <- df %>% select(1,2,3,5,7,8) # chr, pos, strand, id, unmethylated, methylated
str(df)
df$Score <- log2(df$V8/df$V7)
str(df)
df <- df %>% select(4,1,2,3,7)
str(df)
colnames(df) <- c("ID", "Chr", "Pos", "Strand", "Score")
df[,"Pos"] <- df[,"Pos"]+1
df$Pos <- format(df$Pos,scientific=FALSE)
str(df)
1500/35
42.85-15
